-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.4
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity huffman_encoder is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    z1_V_V_dout : IN STD_LOGIC_VECTOR (13 downto 0);
    z1_V_V_empty_n : IN STD_LOGIC;
    z1_V_V_read : OUT STD_LOGIC;
    z2_V_V_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    z2_V_V_empty_n : IN STD_LOGIC;
    z2_V_V_read : OUT STD_LOGIC;
    code_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    code_V_V_full_n : IN STD_LOGIC;
    code_V_V_write : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of huffman_encoder is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "huffman_encoder,hls_ip_2013_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.462000,HLS_SYN_LAT=1539,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_FFFFFFE0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal bit_cnt_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal bit_cnt_table_ce0 : STD_LOGIC;
    signal bit_cnt_table_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal e_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal e_table_ce0 : STD_LOGIC;
    signal e_table_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal reg_249 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_259_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_70 : BOOLEAN;
    signal ap_sig_bdd_76 : BOOLEAN;
    signal i_1_fu_267_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_1_reg_974 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_V_6_reg_981 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_241_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_997 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1008 : STD_LOGIC_VECTOR (0 downto 0);
    signal signs_V_5_fu_349_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal signs_V_5_reg_1013 : STD_LOGIC_VECTOR (1 downto 0);
    signal z2_temp_V_3_fu_364_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal z2_temp_V_3_reg_1020 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_cnt_signs_2_fu_379_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bit_cnt_signs_2_reg_1027 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_reg_1033 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_1039 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1prime_temp_V_3_fu_419_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal z1prime_temp_V_3_reg_1045 : STD_LOGIC_VECTOR (13 downto 0);
    signal signs_V_11_fu_545_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal signs_V_11_reg_1053 : STD_LOGIC_VECTOR (3 downto 0);
    signal bit_cnt_signs_7_cast_fu_585_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal bit_cnt_signs_7_cast_reg_1058 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_739_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_reg_1079 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_fu_742_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_reg_1085 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_767_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_27_reg_1091 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_28_reg_1096 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_43_fu_783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_reg_1101 : STD_LOGIC_VECTOR (15 downto 0);
    signal bit_cnt_fu_793_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal bit_cnt_reg_1106 : STD_LOGIC_VECTOR (5 downto 0);
    signal block_V_fu_798_p5 : STD_LOGIC_VECTOR (38 downto 0);
    signal block_V_reg_1111 : STD_LOGIC_VECTOR (38 downto 0);
    signal icmp_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_136 : BOOLEAN;
    signal bit_cnt_cast_fu_806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_cnt_cast_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_num_fu_857_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_written_fu_879_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_written_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_reg_1144 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_V_3_fu_922_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp1_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_157 : BOOLEAN;
    signal bit_num_1_fu_927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_V_fu_957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_num_2_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_reg_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_198 : STD_LOGIC_VECTOR (8 downto 0);
    signal agg_result_V_reg_213 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signs_V_1_fu_309_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_cast_fu_287_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signs_V_fu_301_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal signs_V_2_fu_331_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal z2_temp_V_2_fu_357_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_cnt_signs_fu_317_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bit_cnt_signs_1_cast_fu_297_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal bit_cnt_signs_1_fu_372_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1prime_temp_V_1_fu_387_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal z1prime_temp_V_2_fu_411_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal z2prime_temp_V_2_fu_427_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal signs_V_4_fu_448_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_0533_4_cast_fu_438_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal signs_V_3_fu_441_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal signs_V_8_fu_460_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal signs_V_9_fu_467_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_cnt_signs_3_fu_455_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal bit_cnt_signs_4_fu_478_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bit_cnt_signs_5_fu_484_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bit_cnt_signs_5_cast_fu_491_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal signs_V_7_fu_508_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0533_8_cast_fu_474_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signs_V_6_fu_500_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal signs_V_10_fu_527_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal z1_temp_V_1_fu_495_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal z1_temp_V_2_fu_553_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal z1_temp_V_3_fu_559_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal bit_cnt_signs_6_fu_516_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_cnt_signs_8_fu_570_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_cnt_signs_7_fu_577_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_566_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_cast_fu_593_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_cast_fu_589_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_14_fu_603_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_cast_fu_609_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_12_cast_fu_606_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_15_fu_619_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_628_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_638_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_666_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_683_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_686_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_434_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_694_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_cast_fu_700_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_18_fu_675_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_21_fu_711_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_656_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_fu_719_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal val_V_fu_725_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_fu_754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_cnt_1_fu_746_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_763_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal bit_cnt_2_cast_fu_750_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp12_fu_787_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_8_fu_809_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_816_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_836_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_fu_842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_863_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_37_fu_898_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_35_fu_893_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_906_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_40_fu_910_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_38_fu_901_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_6_fu_915_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_48_fu_931_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal phitmp_fu_947_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_neg_fu_961_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component huffman_encoder_bit_cnt_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component huffman_encoder_e_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;



begin
    bit_cnt_table_U : component huffman_encoder_bit_cnt_table
    generic map (
        DataWidth => 5,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bit_cnt_table_address0,
        ce0 => bit_cnt_table_ce0,
        q0 => bit_cnt_table_q0);

    e_table_U : component huffman_encoder_e_table
    generic map (
        DataWidth => 19,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => e_table_address0,
        ce0 => e_table_ce0,
        q0 => e_table_q0);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- agg_result_V_reg_213 assign process. --
    agg_result_V_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st4_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_11_fu_597_p2)) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_11_fu_597_p2)) and not((ap_const_lv1_0 = or_cond1_fu_650_p2))))) then 
                agg_result_V_reg_213 <= ap_const_lv1_0;
            elsif ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_fu_259_p3 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_fu_273_p2)) and not(ap_sig_bdd_70)) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_fu_259_p3 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_6_fu_273_p2) and not(ap_sig_bdd_70)))) then 
                agg_result_V_reg_213 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- i_reg_198 assign process. --
    i_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp1_fu_941_p2)) and not(ap_sig_bdd_157)) or ((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = icmp1_fu_941_p2) and not(ap_sig_bdd_157)) or ((ap_ST_st6_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = icmp_fu_873_p2) and not(ap_sig_bdd_136)))) then 
                i_reg_198 <= i_1_reg_974;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_198 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    -- lhs_V_reg_165 assign process. --
    lhs_V_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = icmp_fu_873_p2) and not(ap_sig_bdd_136))) then 
                lhs_V_reg_165 <= r_V_5_fu_850_p2;
            elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = icmp1_fu_941_p2) and not(ap_sig_bdd_157))) then 
                lhs_V_reg_165 <= buf_V_3_fu_922_p1;
            elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp1_fu_941_p2)) and not(ap_sig_bdd_157))) then 
                lhs_V_reg_165 <= buf_V_fu_957_p1;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                lhs_V_reg_165 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- op2_assign_1_reg_182 assign process. --
    op2_assign_1_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (ap_const_lv1_0 = icmp_fu_873_p2) and not(ap_sig_bdd_136))) then 
                op2_assign_1_reg_182 <= bit_num_fu_857_p2;
            elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = icmp1_fu_941_p2) and not(ap_sig_bdd_157))) then 
                op2_assign_1_reg_182 <= bit_num_1_fu_927_p2;
            elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp1_fu_941_p2)) and not(ap_sig_bdd_157))) then 
                op2_assign_1_reg_182 <= bit_num_2_fu_966_p2;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                op2_assign_1_reg_182 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st6_fsm_5 = ap_CS_fsm) and not(ap_sig_bdd_136))) then
                bit_cnt_cast_reg_1117(0) <= bit_cnt_cast_fu_806_p1(0);
    bit_cnt_cast_reg_1117(1) <= bit_cnt_cast_fu_806_p1(1);
    bit_cnt_cast_reg_1117(2) <= bit_cnt_cast_fu_806_p1(2);
    bit_cnt_cast_reg_1117(3) <= bit_cnt_cast_fu_806_p1(3);
    bit_cnt_cast_reg_1117(4) <= bit_cnt_cast_fu_806_p1(4);
    bit_cnt_cast_reg_1117(5) <= bit_cnt_cast_fu_806_p1(5);
                block_V_reg_1111 <= block_V_fu_798_p5;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then
                bit_cnt_reg_1106 <= bit_cnt_fu_793_p2;
                tmp_27_reg_1091 <= tmp_27_fu_767_p2;
                tmp_28_reg_1096 <= tmp_25_fu_757_p2(22 downto 19);
                tmp_43_reg_1101 <= tmp_43_fu_783_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not(ap_sig_bdd_76))) then
                bit_cnt_signs_2_reg_1027 <= bit_cnt_signs_2_fu_379_p3;
                sel_tmp3_reg_1039 <= sel_tmp3_fu_405_p2;
                signs_V_5_reg_1013 <= signs_V_5_fu_349_p3;
                tmp_1_reg_1008 <= z2_V_V_dout(2 downto 2);
                tmp_9_reg_1033 <= z1_V_V_dout(13 downto 13);
                z1prime_temp_V_3_reg_1045 <= z1prime_temp_V_3_fu_419_p3;
                z2_temp_V_3_reg_1020 <= z2_temp_V_3_fu_364_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                bit_cnt_signs_7_cast_reg_1058(0) <= bit_cnt_signs_7_cast_fu_585_p1(0);
    bit_cnt_signs_7_cast_reg_1058(1) <= bit_cnt_signs_7_cast_fu_585_p1(1);
    bit_cnt_signs_7_cast_reg_1058(2) <= bit_cnt_signs_7_cast_fu_585_p1(2);
                signs_V_11_reg_1053 <= signs_V_11_fu_545_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st6_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp_fu_873_p2)) and not(ap_sig_bdd_136))) then
                bit_written_reg_1136 <= bit_written_fu_879_p2;
                tmp_46_reg_1144 <= bit_written_fu_879_p2(31 downto 31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not(ap_sig_bdd_70))) then
                i_1_reg_974 <= i_1_fu_267_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_fu_259_p3 = ap_const_lv1_0) and not(ap_sig_bdd_70)) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and not(ap_sig_bdd_76)))) then
                reg_249 <= z2_V_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_fu_259_p3 = ap_const_lv1_0) and not(ap_sig_bdd_70))) then
                tmp_10_reg_997 <= z1_V_V_dout(13 downto 13);
                tmp_8_reg_989 <= z2_V_V_dout(2 downto 2);
                tmp_V_6_reg_981 <= z1_V_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = tmp_11_fu_597_p2)) and (ap_const_lv1_0 = or_cond1_fu_650_p2))) then
                tmp_41_reg_1079 <= tmp_41_fu_739_p1;
                tmp_42_reg_1085 <= tmp_42_fu_742_p1;
            end if;
        end if;
    end process;
    bit_cnt_signs_7_cast_reg_1058(5 downto 3) <= "000";
    bit_cnt_cast_reg_1117(31 downto 6) <= "00000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , tmp_fu_259_p3 , ap_sig_bdd_70 , ap_sig_bdd_76 , tmp_11_fu_597_p2 , or_cond1_fu_650_p2 , icmp_fu_873_p2 , ap_sig_bdd_136 , ap_sig_bdd_157)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((tmp_fu_259_p3 = ap_const_lv1_0)) and not(ap_sig_bdd_70))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                elsif (((tmp_fu_259_p3 = ap_const_lv1_0) and not(ap_sig_bdd_70))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not(ap_sig_bdd_76)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if ((not((ap_const_lv1_0 = tmp_11_fu_597_p2)) and (ap_const_lv1_0 = or_cond1_fu_650_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if ((not((ap_const_lv1_0 = icmp_fu_873_p2)) and not(ap_sig_bdd_136))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                elsif (((ap_const_lv1_0 = icmp_fu_873_p2) and not(ap_sig_bdd_136))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not(ap_sig_bdd_157)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= agg_result_V_reg_213;

    -- ap_sig_bdd_136 assign process. --
    ap_sig_bdd_136_assign_proc : process(code_V_V_full_n, icmp_fu_873_p2)
    begin
                ap_sig_bdd_136 <= ((code_V_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = icmp_fu_873_p2)));
    end process;


    -- ap_sig_bdd_157 assign process. --
    ap_sig_bdd_157_assign_proc : process(code_V_V_full_n, icmp1_fu_941_p2)
    begin
                ap_sig_bdd_157 <= ((code_V_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = icmp1_fu_941_p2)));
    end process;


    -- ap_sig_bdd_70 assign process. --
    ap_sig_bdd_70_assign_proc : process(z1_V_V_empty_n, z2_V_V_empty_n, code_V_V_full_n, tmp_fu_259_p3, tmp_6_fu_273_p2)
    begin
                ap_sig_bdd_70 <= (((z1_V_V_empty_n = ap_const_logic_0) and (tmp_fu_259_p3 = ap_const_lv1_0)) or ((tmp_fu_259_p3 = ap_const_lv1_0) and (z2_V_V_empty_n = ap_const_logic_0)) or ((code_V_V_full_n = ap_const_logic_0) and not((tmp_fu_259_p3 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_fu_273_p2))));
    end process;


    -- ap_sig_bdd_76 assign process. --
    ap_sig_bdd_76_assign_proc : process(z1_V_V_empty_n, z2_V_V_empty_n)
    begin
                ap_sig_bdd_76 <= ((z1_V_V_empty_n = ap_const_logic_0) or (z2_V_V_empty_n = ap_const_logic_0));
    end process;

    bit_cnt_1_fu_746_p1 <= std_logic_vector(resize(unsigned(bit_cnt_table_q0),32));
    bit_cnt_2_cast_fu_750_p1 <= std_logic_vector(resize(unsigned(bit_cnt_table_q0),6));
    bit_cnt_cast_fu_806_p1 <= std_logic_vector(resize(unsigned(bit_cnt_reg_1106),32));
    bit_cnt_fu_793_p2 <= std_logic_vector(unsigned(tmp12_fu_787_p2) + unsigned(bit_cnt_signs_7_cast_reg_1058));
    bit_cnt_signs_1_cast_fu_297_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_291_p2),2));
    bit_cnt_signs_1_fu_372_p3 <= 
        bit_cnt_signs_fu_317_p3 when (tmp_8_reg_989(0) = '1') else 
        bit_cnt_signs_1_cast_fu_297_p1;
    bit_cnt_signs_2_fu_379_p3 <= 
        bit_cnt_signs_fu_317_p3 when (sel_tmp2_fu_343_p2(0) = '1') else 
        bit_cnt_signs_1_fu_372_p3;
    bit_cnt_signs_3_fu_455_p2 <= std_logic_vector(unsigned(bit_cnt_signs_2_reg_1027) + unsigned(ap_const_lv2_1));
    bit_cnt_signs_4_fu_478_p3 <= 
        bit_cnt_signs_3_fu_455_p2 when (tmp_9_reg_1033(0) = '1') else 
        bit_cnt_signs_2_reg_1027;
    bit_cnt_signs_5_cast_fu_491_p1 <= std_logic_vector(resize(unsigned(bit_cnt_signs_5_fu_484_p3),3));
    bit_cnt_signs_5_fu_484_p3 <= 
        bit_cnt_signs_3_fu_455_p2 when (sel_tmp3_reg_1039(0) = '1') else 
        bit_cnt_signs_4_fu_478_p3;
    bit_cnt_signs_6_fu_516_p2 <= std_logic_vector(unsigned(bit_cnt_signs_5_cast_fu_491_p1) + unsigned(ap_const_lv3_1));
    bit_cnt_signs_7_cast_fu_585_p1 <= std_logic_vector(resize(unsigned(bit_cnt_signs_7_fu_577_p3),6));
    bit_cnt_signs_7_fu_577_p3 <= 
        bit_cnt_signs_6_fu_516_p2 when (sel_tmp8_fu_539_p2(0) = '1') else 
        bit_cnt_signs_8_fu_570_p3;
    bit_cnt_signs_8_fu_570_p3 <= 
        bit_cnt_signs_6_fu_516_p2 when (tmp_10_reg_997(0) = '1') else 
        bit_cnt_signs_5_cast_fu_491_p1;
    bit_cnt_signs_fu_317_p3 <= 
        ap_const_lv2_2 when (tmp_7_fu_291_p2(0) = '1') else 
        ap_const_lv2_1;
    bit_cnt_table_address0 <= tmp_23_fu_733_p1(6 - 1 downto 0);

    -- bit_cnt_table_ce0 assign process. --
    bit_cnt_table_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
            bit_cnt_table_ce0 <= ap_const_logic_1;
        else 
            bit_cnt_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bit_num_1_fu_927_p2 <= std_logic_vector(unsigned(bit_cnt_cast_reg_1117) - unsigned(bit_written_reg_1136));
    bit_num_2_fu_966_p2 <= std_logic_vector(unsigned(p_neg_fu_961_p2) + unsigned(bit_cnt_cast_reg_1117));
    bit_num_fu_857_p2 <= std_logic_vector(unsigned(bit_cnt_cast_fu_806_p1) + unsigned(op2_assign_1_reg_182));
    bit_written_fu_879_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(op2_assign_1_reg_182));
    block_V_fu_798_p5 <= (((tmp_28_reg_1096 & tmp_27_reg_1091) & tmp_41_reg_1079) & tmp_42_reg_1085);
    buf_V_3_fu_922_p1 <= r_V_6_fu_915_p3(32 - 1 downto 0);
    buf_V_fu_957_p1 <= std_logic_vector(resize(unsigned(phitmp_fu_947_p4),32));

    -- code_V_V_din assign process. --
    code_V_V_din_assign_proc : process(ap_CS_fsm, tmp_fu_259_p3, tmp_6_fu_273_p2, ap_sig_bdd_70, icmp_fu_873_p2, ap_sig_bdd_136, r_V_5_fu_850_p2, buf_V_3_fu_922_p1, icmp1_fu_941_p2, ap_sig_bdd_157, lhs_V_reg_165)
    begin
        if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp1_fu_941_p2)) and not(ap_sig_bdd_157))) then 
            code_V_V_din <= buf_V_3_fu_922_p1;
        elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp_fu_873_p2)) and not(ap_sig_bdd_136))) then 
            code_V_V_din <= r_V_5_fu_850_p2;
        elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_fu_259_p3 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_fu_273_p2)) and not(ap_sig_bdd_70))) then 
            code_V_V_din <= lhs_V_reg_165;
        else 
            code_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- code_V_V_write assign process. --
    code_V_V_write_assign_proc : process(ap_CS_fsm, tmp_fu_259_p3, tmp_6_fu_273_p2, ap_sig_bdd_70, icmp_fu_873_p2, ap_sig_bdd_136, icmp1_fu_941_p2, ap_sig_bdd_157)
    begin
        if ((((ap_ST_st6_fsm_5 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp_fu_873_p2)) and not(ap_sig_bdd_136)) or ((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = icmp1_fu_941_p2)) and not(ap_sig_bdd_157)) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((tmp_fu_259_p3 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_6_fu_273_p2)) and not(ap_sig_bdd_70)))) then 
            code_V_V_write <= ap_const_logic_1;
        else 
            code_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    e_table_address0 <= tmp_23_fu_733_p1(6 - 1 downto 0);

    -- e_table_ce0 assign process. --
    e_table_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
            e_table_ce0 <= ap_const_logic_1;
        else 
            e_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_241_p3 <= z1_V_V_dout(13 downto 13);
    grp_fu_253_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(reg_249));
    i_1_fu_267_p2 <= std_logic_vector(unsigned(i_reg_198) + unsigned(ap_const_lv9_1));
    icmp1_fu_941_p2 <= "1" when (signed(tmp_48_fu_931_p4) > signed(ap_const_lv27_0)) else "0";
    icmp_fu_873_p2 <= "1" when (signed(tmp_45_fu_863_p4) > signed(ap_const_lv27_0)) else "0";
    or_cond1_fu_650_p2 <= (tmp_29_fu_644_p2 or tmp_12_fu_613_p2);
    p_0533_4_cast_fu_438_p1 <= std_logic_vector(resize(unsigned(signs_V_5_reg_1013),3));
    p_0533_8_cast_fu_474_p1 <= std_logic_vector(resize(unsigned(signs_V_9_fu_467_p3),4));
    p_8_fu_809_p4 <= ((tmp_43_reg_1101 & tmp_41_reg_1079) & tmp_42_reg_1085);
    p_cast_fu_287_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_279_p3),2));
    p_neg_fu_961_p2 <= std_logic_vector(unsigned(ap_const_lv32_FFFFFFE0) - unsigned(bit_written_reg_1136));
    phitmp_fu_947_p4 <= r_V_6_fu_915_p3(37 downto 32);
    r_V_4_fu_842_p3 <= 
        tmp_33_fu_836_p2 when (tmp_44_fu_816_p3(0) = '1') else 
        tmp_31_fu_824_p2;
    r_V_5_fu_850_p2 <= (r_V_4_fu_842_p3 or lhs_V_reg_165);
    r_V_6_fu_915_p3 <= 
        tmp_40_fu_910_p2 when (tmp_46_reg_1144(0) = '1') else 
        tmp_38_fu_901_p2;
    r_V_fu_686_p3 <= (tmp_30_fu_683_p1 & ap_const_lv1_0);
    sel_tmp1_fu_338_p2 <= (tmp_8_reg_989 xor ap_const_lv1_1);
    sel_tmp2_fu_343_p2 <= (tmp_s_fu_325_p2 and sel_tmp1_fu_338_p2);
    sel_tmp3_fu_405_p2 <= (tmp_2_fu_393_p2 and sel_tmp_fu_399_p2);
    sel_tmp7_fu_534_p2 <= (tmp_10_reg_997 xor ap_const_lv1_1);
    sel_tmp8_fu_539_p2 <= (tmp_4_fu_522_p2 and sel_tmp7_fu_534_p2);
    sel_tmp_fu_399_p2 <= (grp_fu_241_p3 xor ap_const_lv1_1);
    signs_V_10_fu_527_p3 <= 
        signs_V_7_fu_508_p3 when (tmp_10_reg_997(0) = '1') else 
        p_0533_8_cast_fu_474_p1;
    signs_V_11_fu_545_p3 <= 
        signs_V_6_fu_500_p3 when (sel_tmp8_fu_539_p2(0) = '1') else 
        signs_V_10_fu_527_p3;
    signs_V_1_fu_309_p3 <= (tmp_3_fu_279_p3 & ap_const_lv1_1);
    signs_V_2_fu_331_p3 <= 
        signs_V_1_fu_309_p3 when (tmp_8_reg_989(0) = '1') else 
        p_cast_fu_287_p1;
    signs_V_3_fu_441_p3 <= (signs_V_5_reg_1013 & ap_const_lv1_0);
    signs_V_4_fu_448_p3 <= (signs_V_5_reg_1013 & ap_const_lv1_1);
    signs_V_5_fu_349_p3 <= 
        signs_V_fu_301_p3 when (sel_tmp2_fu_343_p2(0) = '1') else 
        signs_V_2_fu_331_p3;
    signs_V_6_fu_500_p3 <= (signs_V_9_fu_467_p3 & ap_const_lv1_0);
    signs_V_7_fu_508_p3 <= (signs_V_9_fu_467_p3 & ap_const_lv1_1);
    signs_V_8_fu_460_p3 <= 
        signs_V_4_fu_448_p3 when (tmp_9_reg_1033(0) = '1') else 
        p_0533_4_cast_fu_438_p1;
    signs_V_9_fu_467_p3 <= 
        signs_V_3_fu_441_p3 when (sel_tmp3_reg_1039(0) = '1') else 
        signs_V_8_fu_460_p3;
    signs_V_fu_301_p3 <= (tmp_3_fu_279_p3 & ap_const_lv1_0);
    tmp12_fu_787_p2 <= std_logic_vector(unsigned(bit_cnt_2_cast_fu_750_p1) + unsigned(ap_const_lv6_10));
    tmp_10_cast_fu_593_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_566_p1),15));
    tmp_11_fu_597_p2 <= "1" when (tmp_10_cast_fu_593_p1 = tmp_8_cast_fu_589_p1) else "0";
    tmp_12_cast_fu_606_p1 <= std_logic_vector(resize(unsigned(z1prime_temp_V_3_reg_1045),15));
    tmp_12_fu_613_p2 <= "0" when (tmp_13_cast_fu_609_p1 = tmp_12_cast_fu_606_p1) else "1";
    tmp_13_cast_fu_609_p1 <= std_logic_vector(resize(unsigned(tmp_14_fu_603_p1),15));
    tmp_13_fu_566_p1 <= z1_temp_V_3_fu_559_p3(10 - 1 downto 0);
    tmp_14_fu_603_p1 <= z1prime_temp_V_3_reg_1045(10 - 1 downto 0);
    tmp_15_fu_619_p4 <= z2_temp_V_3_reg_1020(2 downto 1);
    tmp_16_fu_656_p4 <= z1_temp_V_3_fu_559_p3(9 downto 8);
    tmp_17_fu_666_p4 <= z1prime_temp_V_3_reg_1045(9 downto 8);
    tmp_18_fu_675_p3 <= (tmp_17_fu_666_p4 & ap_const_lv2_0);
    tmp_19_fu_694_p2 <= (r_V_fu_686_p3 or tmp_5_fu_434_p1);
    tmp_20_fu_628_p4 <= z2prime_temp_V_2_fu_427_p3(2 downto 1);
    tmp_21_fu_711_p3 <= (tmp_34_fu_704_p3 & tmp_22_cast_fu_700_p1);
    tmp_22_cast_fu_700_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_694_p2),3));
    tmp_22_fu_719_p2 <= (tmp_18_fu_675_p3 or tmp_21_fu_711_p3);
    tmp_23_fu_733_p1 <= std_logic_vector(resize(unsigned(val_V_fu_725_p3),64));
    tmp_24_fu_754_p1 <= std_logic_vector(resize(unsigned(signs_V_11_reg_1053),32));
    tmp_25_fu_757_p2 <= std_logic_vector(shift_left(unsigned(tmp_24_fu_754_p1),to_integer(unsigned('0' & bit_cnt_1_fu_746_p1(31-1 downto 0)))));
    tmp_26_fu_638_p2 <= (tmp_15_fu_619_p4 or tmp_20_fu_628_p4);
    tmp_27_fu_767_p2 <= (tmp_36_fu_763_p1 or e_table_q0);
    tmp_29_fu_644_p2 <= "0" when (tmp_26_fu_638_p2 = ap_const_lv2_0) else "1";
    tmp_2_fu_393_p2 <= "1" when (signed(z1_V_V_dout) > signed(ap_const_lv14_0)) else "0";
    tmp_30_fu_683_p1 <= z2_temp_V_3_reg_1020(1 - 1 downto 0);
    tmp_31_fu_824_p2 <= std_logic_vector(shift_left(unsigned(p_8_fu_809_p4),to_integer(unsigned('0' & op2_assign_1_reg_182(31-1 downto 0)))));
    tmp_32_fu_830_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(op2_assign_1_reg_182));
    tmp_33_fu_836_p2 <= std_logic_vector(shift_right(unsigned(p_8_fu_809_p4),to_integer(unsigned('0' & tmp_32_fu_830_p2(31-1 downto 0)))));
    tmp_34_fu_704_p3 <= z2_temp_V_3_reg_1020(2 downto 2);
    tmp_35_fu_893_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(bit_written_reg_1136));
    tmp_36_fu_763_p1 <= tmp_25_fu_757_p2(19 - 1 downto 0);
    tmp_37_fu_898_p1 <= std_logic_vector(resize(unsigned(bit_written_reg_1136),39));
    tmp_38_fu_901_p2 <= std_logic_vector(shift_right(unsigned(block_V_reg_1111),to_integer(unsigned('0' & tmp_37_fu_898_p1(31-1 downto 0)))));
    tmp_39_fu_906_p1 <= std_logic_vector(resize(unsigned(tmp_35_fu_893_p2),39));
    tmp_3_fu_279_p3 <= z2_V_V_dout(2 downto 2);
    tmp_40_fu_910_p2 <= std_logic_vector(shift_left(unsigned(block_V_reg_1111),to_integer(unsigned('0' & tmp_39_fu_906_p1(31-1 downto 0)))));
    tmp_41_fu_739_p1 <= z1prime_temp_V_3_reg_1045(8 - 1 downto 0);
    tmp_42_fu_742_p1 <= z1_temp_V_3_fu_559_p3(8 - 1 downto 0);
    tmp_43_fu_783_p1 <= tmp_27_fu_767_p2(16 - 1 downto 0);
    tmp_44_fu_816_p3 <= op2_assign_1_reg_182(31 downto 31);
    tmp_45_fu_863_p4 <= bit_num_fu_857_p2(31 downto 5);
    tmp_48_fu_931_p4 <= bit_num_1_fu_927_p2(31 downto 5);
    tmp_4_fu_522_p2 <= "1" when (signed(tmp_V_6_reg_981) > signed(ap_const_lv14_0)) else "0";
    tmp_5_fu_434_p1 <= z2prime_temp_V_2_fu_427_p3(2 - 1 downto 0);
    tmp_6_fu_273_p2 <= "1" when (signed(op2_assign_1_reg_182) > signed(ap_const_lv32_0)) else "0";
    tmp_7_fu_291_p2 <= "0" when (z2_V_V_dout = ap_const_lv3_0) else "1";
    tmp_8_cast_fu_589_p1 <= std_logic_vector(resize(unsigned(z1_temp_V_3_fu_559_p3),15));
    tmp_fu_259_p3 <= i_reg_198(8 downto 8);
    tmp_s_fu_325_p2 <= "1" when (signed(reg_249) > signed(ap_const_lv3_0)) else "0";
    val_V_fu_725_p3 <= (tmp_16_fu_656_p4 & tmp_22_fu_719_p2);

    -- z1_V_V_read assign process. --
    z1_V_V_read_assign_proc : process(ap_CS_fsm, tmp_fu_259_p3, ap_sig_bdd_70, ap_sig_bdd_76)
    begin
        if ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_fu_259_p3 = ap_const_lv1_0) and not(ap_sig_bdd_70)) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and not(ap_sig_bdd_76)))) then 
            z1_V_V_read <= ap_const_logic_1;
        else 
            z1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    z1_temp_V_1_fu_495_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(tmp_V_6_reg_981));
    z1_temp_V_2_fu_553_p3 <= 
        z1_temp_V_1_fu_495_p2 when (tmp_10_reg_997(0) = '1') else 
        tmp_V_6_reg_981;
    z1_temp_V_3_fu_559_p3 <= 
        tmp_V_6_reg_981 when (sel_tmp8_fu_539_p2(0) = '1') else 
        z1_temp_V_2_fu_553_p3;
    z1prime_temp_V_1_fu_387_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(z1_V_V_dout));
    z1prime_temp_V_2_fu_411_p3 <= 
        z1prime_temp_V_1_fu_387_p2 when (grp_fu_241_p3(0) = '1') else 
        z1_V_V_dout;
    z1prime_temp_V_3_fu_419_p3 <= 
        z1_V_V_dout when (sel_tmp3_fu_405_p2(0) = '1') else 
        z1prime_temp_V_2_fu_411_p3;

    -- z2_V_V_read assign process. --
    z2_V_V_read_assign_proc : process(ap_CS_fsm, tmp_fu_259_p3, ap_sig_bdd_70, ap_sig_bdd_76)
    begin
        if ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_fu_259_p3 = ap_const_lv1_0) and not(ap_sig_bdd_70)) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and not(ap_sig_bdd_76)))) then 
            z2_V_V_read <= ap_const_logic_1;
        else 
            z2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    z2_temp_V_2_fu_357_p3 <= 
        grp_fu_253_p2 when (tmp_8_reg_989(0) = '1') else 
        reg_249;
    z2_temp_V_3_fu_364_p3 <= 
        reg_249 when (sel_tmp2_fu_343_p2(0) = '1') else 
        z2_temp_V_2_fu_357_p3;
    z2prime_temp_V_2_fu_427_p3 <= 
        grp_fu_253_p2 when (tmp_1_reg_1008(0) = '1') else 
        reg_249;
end behav;
